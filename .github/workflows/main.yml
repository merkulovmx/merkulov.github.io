# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-site
env:
  EB_PACKAGE_S3_BUCKET: "test-python-application-packages"
  EB_APPLICATION      : "ProjectBlog"
  EB_ENV_NAME         : "Projectblog-env"
  DEPLOY_PACKAGE_NAME : "blog_web_${{github.sha}}.zip"
  AWS_REGION_NAME     : "us-east-1"
  
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "ci_part    
  ci_part:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git clone repo
        uses: actions/checkout@v2

      # Create zip-package
      - name: Create Zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git* 
      
      # Connect with a AWS
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
          aws-region: ${{env.AWS_REGION_NAME}}
          
      # Copy to S3 bucket
      - name: Copy Deployment package to S3 bucket
        run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }}  s3://${{ env.EB_PACKAGE_S3_BUCKET }}/
          
      - name: A message about of the end of operations
        run: echo "Success!"
    
  cd_part:
    runs-on: ubuntu-latest
    needs  : [ci_part]

    steps  :
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
          aws-region: ${{env.AWS_REGION_NAME}}
          
      # Create new ElasticBeanstalk App
      - name: Create new ElasticBeanstalk App
        run : |
          aws elasticbeanstalk create-application-version \
          --application-name ${{env.EB_APPLICATION}}\
          --source-bundle S3Bucket="${{env.EB_PACKAGE_S3_BUCKET}}",S3Key="${{env.DEPLOY_PACKAGE_NAME}}"\
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{github.sha}}"
          
      - name: Deploy new ElasticBeanstalk App
        run : |
          aws elasticbeanstalk update-environment \
          --environment-name ${{env.EB_ENV_NAME}} \
          --version-label "Ver-${{ github.sha }}"
              
      - name: A message about of the end of operations
        run : echo "Deploy completed!"

